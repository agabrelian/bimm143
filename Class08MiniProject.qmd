---
title: "Class08"
author: "Ani A16647613"
format: pdf
---

## Mini Project: Unsupervised Learning with PCA and Clustering

Before we get stuck into project work we will have a quick look at

Read the data from lab 7:
```{r}
url2 <- "https://tinyurl.com/expression-CSV"
rna.data <- read.csv(url2, row.names=1)
head(rna.data)
```

> Q. How many genes are in this dataset?

```{r}
nrow(rna.data)
```

##Run PCA

```{r}
pca <- prcomp(t(rna.data), scale= TRUE)
plot(pca$x[,1], pca$x[,2], xlab="PC1", ylab= "PC2")
```

```{r}
summary(pca)
```

```{r}
pca$x
```

```{r}
# We have 5 wt and 5 ko samples
mycols <- c(rep("blue",5), rep("red", 5))
mycols

plot(pca$x[,1], pca$x[,2], xlab="PCA1", ylab="PCA2", col=mycols)
```

Examination of genes that contribute to the first PC the most:

```{r}
head(sort(abs(pca$rotation[,1]), decreasing = T))
```

# Analysis of Breast Cancer FNA data (fine needle aspirations)

```{r}
fna.data <- "WisconsinCancer.csv"
wisc.df <- read.csv(fna.data, row.names=1)
head(wisc.df)
```

```{r}
diagnosis <- as.factor(wisc.df$diagnosis)
```

Now I want to make sure I remove that column from my dataset for analysis:

```{r}
wisc.data <- wisc.df[,-1]
head(wisc.data)
```

```{r}
nrow(wisc.df)
```

> Q1. How many observations are in the dataset?

```{r}
ncol(wisc.df)
```

> Q2. How many observations have the malignant diagnosis?

```{r}
table( wisc.df$diagnosis )
```
212 malignant diagnoses.

> Q3. How many variables/features in the data are suffixed with `_mean`?

```{r}
colnames(wisc.data)
```

```{r}
grep("_mean", colnames(wisc.data), value=T)
grep("_mean", colnames(wisc.data))
```

```{r}
length(grep("_mean", colnames(wisc.data)))
```

# Principal Component Analyis

Here we will use `prcomp()` on the `wisc.data` object - the one without the diagnosis column.

First, we have decided whether to use the `scale= TRUE` argument when we run `prcomp()`

We can look at the means and sd of each column. If they are similar then we are all good to go. If not we should use `scale=TRUE`.

```{r}
colMeans(wisc.data)
```

```{r}
apply(wisc.data,2,sd)
```

These are very different so we should scale=TRUE.

```{r}
wisc.pr <- prcomp(wisc.data, scale = TRUE)
summary(wisc.pr)
```

> Q4. From your results, what proportion of the original variance is captured by the first principal components (PC1)?

44.27%

> Q5. How many PCs are required to describe at least 70% of the original variance in the data?

3 PCs

> Q6. How many PCs are required to describe at least 90% of the original variance in the data?

7 PCs

## Plotting the PCA results

We need to make our own plot

```{r}
attributes(wisc.pr)
```

> Q8. 

```{r}
plot(wisc.pr$x[,1], wisc.pr$x[,2], col=diagnosis)

# black is benign, red is malignant
```

```{r}
library(ggplot2)

pc <- as.data.frame(wisc.pr$x)

ggplot(pc) + 
aes(PC1, PC2, color=diagnosis) +
geom_point()

#shows clearer distinction between diagnoses

```

## Communicating PCA results 

> Q9. For the first PC, what is the component of the loading vector (ie. wisc.pr$rotation[,1]) for the feature `concave.points_mean`?

```{r}
wisc.pr$rotation["concave.points_mean", 1]
```

> Q10. What is the minimum number of principal components required to explain 80% of the variance of the data?

```{r}
tbl <- summary(wisc.pr)

which(tbl$importance[3,] > 0.8)[1]
```

## Hierarchial clustering

The main function for the Hierarchial clustering is called `hclust()`, it takes a distance matrix as input.

```{r}
d <- dist(scale(wisc.data))
wisc.hclust <- hclust(d)
plot(wisc.hclust)
```

> Q11. Using the plot() and abline() functions, what is the height at which the clustering model has 4 clusters?

```{r}
plot(wisc.hclust)
abline(h=18, col="red")
grps <- cutree(wisc.hclust, h=18)
table(grps)
```

Come back here later to see how our cluster grps correspond to M or B groups.

```{r}
ggplot(pc) + 
aes(PC1, PC2, color=diagnosis) +
geom_point()
```

## Combining methods

Here we will be clusting on our PCA results instead of the original data.

In other words, we will cluster using `wisc.pr$x` - our new better variables or PCs, we can choose as many/few as we like. 

```{r}
d.pc <- dist(wisc.pr$x[, 1:3])

wisc.pr.hclust <- hclust(d.pc, method="ward.D2")

plot(wisc.pr.hclust)

abline(h=80, col="red")

```

```{r}
grps <- cutree(wisc.pr.hclust, h=80)
table(grps)
```

We can use `table()` function to make a cross-table and a count-table.

```{r}
table(diagnosis)
```
```{r}
table(grps, diagnosis)

```
Based on these groupings, we can determine that the results for group 1 with 24 benign diagnoses and group 2 with 33 malignant diagnoses were false positives. The majority diagnoses from group 1 for malignant and group 2 from benign are considered accurate results. This tool is useful for distinguishing the differences within the groups from the clusters and analyze their diagnoses, which can help validate the diagnoses' accuracy.

## Prediction

```{r}
url <- "https://tinyurl.com/new-samples-CSV"
new <- read.csv(url)
npc <- predict(wisc.pr, newdata=new)
npc
```
```{r}
plot(wisc.pr$x[,1:2], col=g)
points(npc[,1], npc[,2], col="blue", pch=16, cex=3)
text(npc[,1], npc[,2], c(1,2), col="white")
```

> Q18. 

Patient 2


